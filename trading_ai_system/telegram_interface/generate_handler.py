from telegram import Update
from telegram.ext import ContextTypes
from crew_config import run_crew
import traceback

async def handle_generate(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        user_input = update.message.text.replace("/generate", "").strip()
        print(f"[LOG] –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –æ—Ç Telegram: {user_input}")

        if not user_input:
            await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏ –ø—Ä–æ–¥—É–∫—Ç.")
            print("[LOG] –ü—É—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å ‚Äî –±–æ—Ç –ø–æ–ø—Ä–æ—Å–∏–ª —É—Ç–æ—á–Ω–µ–Ω–∏–µ.")
            return

        await update.message.reply_text("üöÄ –ö–æ–º–∞–Ω–¥–∞ –∞–≥–µ–Ω—Ç–æ–≤ –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—É...")
        print("[LOG] –°—Ç–∞—Ä—Ç —Ä–∞–±–æ—Ç—ã CrewAI...")

        result = run_crew(user_input)

        print(f"[LOG] –ó–∞–≤–µ—Ä—à–µ–Ω–æ. –û—Ç–≤–µ—Ç –æ—Ç CrewAI: {result}")
        await update.message.reply_text("‚úÖ –ì–æ—Ç–æ–≤–æ! –í–æ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç:\n" + str(result))

    except Exception as e:
        error_text = traceback.format_exc()
        print(f"[ERROR] –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞:\n{error_text}")
        await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ: {e}")
